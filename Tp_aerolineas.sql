-- MySQL Script generated by MySQL Workbench
-- mié 04 jul 2018 11:04:07 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- drop database `mydb` ;
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Aviones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Aviones` (
  `idAviones` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Cant_tripulantes_necesarios` INT NOT NULL,
  `Cant_Asientos_económica` INT NULL,
  `Cant_Asientos_business` INT NULL,
  `Cant_Asientos_primera clase.` INT NULL,
  PRIMARY KEY (`idAviones`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NULL,
  `Apellido` VARCHAR(45) NULL,
  `Dni` VARCHAR(45) NOT NULL,
  `Fecha_Nac` VARCHAR(45) NULL,
  `Sexo` VARCHAR(45) NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Destinos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Destinos` (
  `idDestinos` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NULL,
  `cant_vuelos` VARCHAR(45) NULL,
  PRIMARY KEY (`idDestinos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Vuelo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Vuelo` (
  `idVuelo` INT NOT NULL AUTO_INCREMENT,
  `Origen` VARCHAR(45) NOT NULL,
  `Destino` INT NOT NULL,
  `Avion` INT NOT NULL,
  `Fecha` VARCHAR(45) NOT NULL,
  `Precio_economica` VARCHAR(45) NOT NULL,
  `Precio_business` VARCHAR(45) NOT NULL,
  `Precio_primeraClase` VARCHAR(45) NOT NULL,
  `Cant_Asientos_económica` INT NULL,
  `Cant_Asientos_business` INT NULL,
  `Cant_Asientos_primera clase.` INT NULL,
  PRIMARY KEY (`idVuelo`),
  INDEX `fk_Vuelo_Destinos1_idx` (`Destino` ASC),
  INDEX `fk_Vuelo_Aviones1_idx` (`Avion` ASC),
  CONSTRAINT `fk_Vuelo_Destinos1`
    FOREIGN KEY (`Destino`)
    REFERENCES `mydb`.`Destinos` (`idDestinos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Vuelo_Aviones1`
    FOREIGN KEY (`Avion`)
    REFERENCES `mydb`.`Aviones` (`idAviones`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Reserva` (
  `idReserva` INT NOT NULL AUTO_INCREMENT,
  `Costo` INT NULL,
  `Categoria` VARCHAR(45) NULL,
  `Cliente` INT NOT NULL,
  `Fecha_y_hora` VARCHAR(45) NULL,
  `Metodo_de_Pago` VARCHAR(45) NULL,
  `Vuelo_idVuelo` INT NOT NULL,
  PRIMARY KEY (`idReserva`),
  INDEX `fk_Reserva_Cliente_idx` (`Cliente` ASC),
  INDEX `fk_Reserva_Vuelo1_idx` (`Vuelo_idVuelo` ASC),
  CONSTRAINT `fk_Reserva_Cliente`
    FOREIGN KEY (`Cliente`)
    REFERENCES `mydb`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reserva_Vuelo1`
    FOREIGN KEY (`Vuelo_idVuelo`)
    REFERENCES `mydb`.`Vuelo` (`idVuelo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Aviones_BEFORE_INSERT` BEFORE INSERT ON `Aviones` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Aviones_AFTER_INSERT` AFTER INSERT ON `Aviones` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Aviones_BEFORE_UPDATE` BEFORE UPDATE ON `Aviones` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Aviones_AFTER_UPDATE` AFTER UPDATE ON `Aviones` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Aviones_BEFORE_DELETE` BEFORE DELETE ON `Aviones` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Aviones_AFTER_DELETE` AFTER DELETE ON `Aviones` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Cliente_BEFORE_INSERT` BEFORE INSERT ON `Cliente` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Cliente_AFTER_INSERT` AFTER INSERT ON `Cliente` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Cliente_BEFORE_UPDATE` BEFORE UPDATE ON `Cliente` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Cliente_AFTER_UPDATE` AFTER UPDATE ON `Cliente` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Cliente_BEFORE_DELETE` BEFORE DELETE ON `Cliente` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Cliente_AFTER_DELETE` AFTER DELETE ON `Cliente` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Destinos_BEFORE_INSERT` BEFORE INSERT ON `Destinos` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Destinos_AFTER_INSERT` AFTER INSERT ON `Destinos` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Destinos_BEFORE_UPDATE` BEFORE UPDATE ON `Destinos` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Destinos_AFTER_UPDATE` AFTER UPDATE ON `Destinos` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Destinos_BEFORE_DELETE` BEFORE DELETE ON `Destinos` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Destinos_AFTER_DELETE` AFTER DELETE ON `Destinos` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Vuelo_BEFORE_INSERT` BEFORE INSERT ON `Vuelo` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Vuelo_AFTER_INSERT` AFTER INSERT ON `Vuelo` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Vuelo_BEFORE_UPDATE` BEFORE UPDATE ON `Vuelo` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Vuelo_AFTER_UPDATE` AFTER UPDATE ON `Vuelo` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Vuelo_BEFORE_DELETE` BEFORE DELETE ON `Vuelo` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Vuelo_AFTER_DELETE` AFTER DELETE ON `Vuelo` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reserva_BEFORE_INSERT` BEFORE INSERT ON `Reserva` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reserva_AFTER_INSERT` AFTER INSERT ON `Reserva` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reserva_BEFORE_UPDATE` BEFORE UPDATE ON `Reserva` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reserva_AFTER_UPDATE` AFTER UPDATE ON `Reserva` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reserva_BEFORE_DELETE` BEFORE DELETE ON `Reserva` FOR EACH ROW
BEGIN

END
$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Reserva_AFTER_DELETE` AFTER DELETE ON `Reserva` FOR EACH ROW
BEGIN

END
$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mydb`.`Aviones`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Aviones` (`idAviones`, `Nombre`, `Cant_tripulantes_necesarios`, `Cant_Asientos_económica`, `Cant_Asientos_business`, `Cant_Asientos_primera clase.`) VALUES (1, 'Boeing 777', 40, 250, 200, 100);
INSERT INTO `mydb`.`Aviones` (`idAviones`, `Nombre`, `Cant_tripulantes_necesarios`, `Cant_Asientos_económica`, `Cant_Asientos_business`, `Cant_Asientos_primera clase.`) VALUES (2, 'Boeing 737', 20, 250, 200, 100);
INSERT INTO `mydb`.`Aviones` (`idAviones`, `Nombre`, `Cant_tripulantes_necesarios`, `Cant_Asientos_económica`, `Cant_Asientos_business`, `Cant_Asientos_primera clase.`) VALUES (3, 'Boeing 787', 20, 250, 200, 100);
INSERT INTO `mydb`.`Aviones` (`idAviones`, `Nombre`, `Cant_tripulantes_necesarios`, `Cant_Asientos_económica`, `Cant_Asientos_business`, `Cant_Asientos_primera clase.`) VALUES (4, 'A320', 10, 100, 100, 20);
INSERT INTO `mydb`.`Aviones` (`idAviones`, `Nombre`, `Cant_tripulantes_necesarios`, `Cant_Asientos_económica`, `Cant_Asientos_business`, `Cant_Asientos_primera clase.`) VALUES (5, 'A380', 10, 100, 100, 20);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Cliente`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Cliente` (`idCliente`, `Nombre`, `Apellido`, `Dni`, `Fecha_Nac`, `Sexo`) VALUES (1, 'Pedro', 'Ramirez', '123456789', '2003-12-31', 'M');
INSERT INTO `mydb`.`Cliente` (`idCliente`, `Nombre`, `Apellido`, `Dni`, `Fecha_Nac`, `Sexo`) VALUES (2, 'Marcela', 'Tomic', '213456789', '10-5-1980', 'F');
INSERT INTO `mydb`.`Cliente` (`idCliente`, `Nombre`, `Apellido`, `Dni`, `Fecha_Nac`, `Sexo`) VALUES (3, 'Augusto', 'Sarappa', '312456789', '2-2-1989', 'M');
INSERT INTO `mydb`.`Cliente` (`idCliente`, `Nombre`, `Apellido`, `Dni`, `Fecha_Nac`, `Sexo`) VALUES (4, 'Abril', 'Romero Fara', '412356789', '20-6-1992', 'F');
INSERT INTO `mydb`.`Cliente` (`idCliente`, `Nombre`, `Apellido`, `Dni`, `Fecha_Nac`, `Sexo`) VALUES (5, 'Raul', 'Andreatini', '512346789', '13-4-1995', 'M');

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Destinos`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Destinos` (`idDestinos`, `Nombre`, `cant_vuelos`) VALUES (1, 'Paris', NULL);
INSERT INTO `mydb`.`Destinos` (`idDestinos`, `Nombre`, `cant_vuelos`) VALUES (2, 'Oklahoma', NULL);
INSERT INTO `mydb`.`Destinos` (`idDestinos`, `Nombre`, `cant_vuelos`) VALUES (3, 'City Bell', NULL);
INSERT INTO `mydb`.`Destinos` (`idDestinos`, `Nombre`, `cant_vuelos`) VALUES (4, 'San Francisco', NULL);
INSERT INTO `mydb`.`Destinos` (`idDestinos`, `Nombre`, `cant_vuelos`) VALUES (5, 'Cleveland', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `mydb`.`Vuelo`
-- -----------------------------------------------------
START TRANSACTION;
USE `mydb`;
INSERT INTO `mydb`.`Vuelo` (`idVuelo`, `Origen`, `Destino`, `Avion`, `Fecha`, `Precio_economica`, `Precio_business`, `Precio_primeraClase`) VALUES (1, 'Buenos Aires', 1, 1, '12/12/2018', '100', '150', '170');
INSERT INTO `mydb`.`Vuelo` (`idVuelo`, `Origen`, `Destino`, `Avion`, `Fecha`, `Precio_economica`, `Precio_business`, `Precio_primeraClase`) VALUES (2, 'Santa Fe', 2, 2, '4/7/2018', '200', '250', '270');
INSERT INTO `mydb`.`Vuelo` (`idVuelo`, `Origen`, `Destino`, `Avion`, `Fecha`, `Precio_economica`, `Precio_business`, `Precio_primeraClase`) VALUES (3, 'Cordoba', 3, 3, '5/7/2018', '300', '350', '370');
INSERT INTO `mydb`.`Vuelo` (`idVuelo`, `Origen`, `Destino`, `Avion`, `Fecha`, `Precio_economica`, `Precio_business`, `Precio_primeraClase`) VALUES (4, 'Chubut', 4, 4, '6/72018', '400', '450', '470');
INSERT INTO `mydb`.`Vuelo` (`idVuelo`, `Origen`, `Destino`, `Avion`, `Fecha`, `Precio_economica`, `Precio_business`, `Precio_primeraClase`) VALUES (5, 'San Luis', 5, 5, '4/7/2018', '500', '550', '570');

COMMIT;



DROP PROCEDURE IF EXISTS Vuelos_en_fecha;
DELIMITER $$
CREATE PROCEDURE Vuelos_en_fecha(fecha VARCHAR(45),destino varchar(45))
BEGIN

select * from Vuelo
join Destinos on Destinos.idDestinos = Vuelo.Destino
where Destinos.Nombre=destino and Vuelo.Fecha= fecha; 

END $$
DELIMITER ;

call Vuelos_en_fecha('4/7/2018','Oklahoma');

DROP TRIGGER IF EXISTS Costo;
DELIMITER $$
CREATE TRIGGER Costo after insert on Reserva for each row
BEGIN
declare aux varchar(45);

select new.Categoria into aux from Reserva;

if aux = 'economica' then
update Reserva 
join  Reserva on Reserva.Vuelo_idVuelo = Vuelo.idVuelo
set Costo =  Vuelo.Precio_economica ,
;

elseif aux = 'business' then
update Reserva 
join  Reserva on Reserva.Vuelo_idVuelo = Vuelo.idVuelo
set Costo =  Vuelo.Precio_business;

elseif aux = 'primera clase' then
update Reserva 
join  Reserva on Reserva.Vuelo_idVuelo = Vuelo.idVuelo
set Costo =  Vuelo.Precio_primeraClase;

end if;
END $$
DELIMITER ;

select * from Vuelo;

drop procedure if exists insertReserva;
delimiter $$
create procedure insertReserva (in id int, in costo int, in categoria varchar(40), in idCLIENTE int, in Fecha_y_hora varchar(40), in pago varchar(40), idVUELO int, out rta varchar(40))
begin

 declare aux varchar(40);

 select idReserva into aux
 from Reserva;

 if aux = id then
	set rta = 'La reserva ya existe';
        
 else
	insert into Reserva(idReserva, Costo, Categoria, Cliente, Fecha_y_hora, Metodo_de_Pago, Vuelo_idVuelo) values (id, costo , categoria , idCLIENTE, Fecha_y_hora, pago , idVUELO);
	set rta = 'Se inserto la reserva';
 end if;
 
 end $$
delimiter ;
call insertReserva(1, '1000', 'Economica', 1, '10-5-1980', 'Efectivo', 1, @rta);
select @rta;

select * from Reserva;

